import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters.command import Command
from config import settings
from hsk3 import routers as hsk3_routers

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=settings.BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))

# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("Yulu - –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ HSK!")

# @dp.message()
# async def handle_media(message: types.Message):
#     # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ
#     if message.photo:
#         file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
#         await message.reply(f"üì∑ Photo file_id: <code>{file_id}</code>", parse_mode="HTML")
#
#     # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ
#     elif message.video:
#         file_id = message.video.file_id
#         await message.reply(f"üé• Video file_id: <code>{file_id}</code>", parse_mode="HTML")
#
#     # –ï—Å–ª–∏ —ç—Ç–æ –∞—É–¥–∏–æ
#     elif message.audio:
#         file_id = message.audio.file_id
#         await message.reply(f"üîä Audio file_id: <code>{file_id}</code>", parse_mode="HTML")
#
#     # –ï—Å–ª–∏ —ç—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, PDF)
#     elif message.document:
#         file_id = message.document.file_id
#         await message.reply(f"üìÑ Document file_id: <code>{file_id}</code>", parse_mode="HTML")
#
#     # –ï—Å–ª–∏ —ç—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
#     elif message.voice:
#         file_id = message.voice.file_id
#         await message.reply(f"üé§ Voice file_id: <code>{file_id}</code>", parse_mode="HTML")
#
#     # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∏–∫–µ—Ä
#     elif message.sticker:
#         file_id = message.sticker.file_id
#         await message.reply(f"üòÄ Sticker file_id: <code>{file_id}</code>", parse_mode="HTML")


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    for router in hsk3_routers:
        dp.include_router(router)

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
