import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters.command import Command
from aiogram.types import BotCommand, Message, KeyboardButton

from config import settings
from hsk3 import routers as hsk3_routers

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=settings.BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))

# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

WELCOME_TEXT = """
<b>–ü—Ä–∏–≤–µ—Ç, {name}! –Ø - —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç Yulu.</b>

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É HSK –ø–æ –∫–∏—Ç–∞–π—Å–∫–æ–º—É —è–∑—ã–∫—É.

üìö <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
- –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è HSK (1-6)
- –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤:
  üîä –ê—É–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
  üìñ –ß—Ç–µ–Ω–∏–µ
  ‚úçÔ∏è –ü–∏—Å—å–º–æ
  üìù –õ–µ–∫—Å–∏–∫–∞
- –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–Ω—ã–µ —Ç–µ—Å—Ç—ã
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üîπ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /levels —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å HSK –∏ –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É!
üîπ –ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –±–∞–≥ –∏–ª–∏ –æ—à–∏–±–∫–∞, —Ç–æ –ø–∏—à–∏—Ç–µ https://t.me/lavingham
    """


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(WELCOME_TEXT.format(name=(message.from_user.first_name + " " + message.from_user.last_name)))

@dp.message(Command("help"))
async def cmd_start(message: types.Message):
    await message.answer(WELCOME_TEXT.format(name=(message.from_user.first_name + " " + message.from_user.last_name)))


@dp.message(F.audio | F.photo | F.video)
async def handle_media(message: types.Message):
    if message.chat.id == settings.PRIVATE_GROUP_ID:
        # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ
        if message.photo:
            file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
            await message.reply(f"üì∑ Photo file_id: <code>{file_id}</code>", parse_mode="HTML")

        # –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ
        elif message.video:
            file_id = message.video.file_id
            await message.reply(f"üé• Video file_id: <code>{file_id}</code>", parse_mode="HTML")

        # –ï—Å–ª–∏ —ç—Ç–æ –∞—É–¥–∏–æ
        elif message.audio:
            file_id = message.audio.file_id
            await message.reply(f"üîä Audio file_id: <code>{file_id}</code>", parse_mode="HTML")


# async def set_bot_commands(dp):
#     commands = [
#         BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
#         BotCommand("help", "–ü–æ–º–æ—â—å –∏ —Ñ—É–Ω–∫—Ü–∏–∏"),
#         BotCommand("1", "1")
#     ]
#     await dp.bot.set_my_commands(commands)

@dp.message(Command("levels"))
async def get_levels(msg: Message):
    levels_kb = [
        [KeyboardButton(text="/hsk1"), KeyboardButton(text="/hsk2")],
        [KeyboardButton(text="/hsk3"), KeyboardButton(text="/hsk4")],
        [KeyboardButton(text="/hsk5"), KeyboardButton(text="/hsk6")]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=levels_kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å HSK"
    )

    await msg.answer("–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å?", reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    for router in hsk3_routers:
        dp.include_router(router)

    await dp.start_polling(bot, allowed_updates=["message", "callback_query", "poll_answer"])


if __name__ == "__main__":
    asyncio.run(main())
